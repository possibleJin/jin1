GIT版本仓库的学习
1.版本控制，方便下次修改；多人协同工作管理文件内容，不会覆盖
2.数据备份；版本管理，文件系统快照方式不保存重复数据，节约存储空间，提升效率；权限控制和代码审核；历史记录，查看修改时间、修改人、内容和信息；分支管理，优雅、简洁
3.集中式版本控制SVN
    服务器损坏，全挂了，只有当前数据，单点故障
  分布式版本控制GIT
    任何一个人可以给其他人数据，拥有一个远程库，避免你单点故障
4.优势：大部分本地完成，不需要联网；完整性保证，hash；尽可能添加数据而不是删除或修改数据，很少有不可逆的；分支操作非常快捷流畅；与Linux命令全面兼容
5.安装到非中文且没有空格的目录中；使用VIM编辑器
6.git：本地库；git commit暂存区，临时存储；git add工作区
7.代码托管中心：gitlab,github,码云。用于维护远程库。
8.代码托管中心：团队内：本地库push内容推到远程库，其余用户clone克隆到本地，修改后可以push到远程库,但需要加入团队，最后本地库在pull；团队外：团队内的人有本地库，团队外的人通过fork复制一个
远程库，然后clone到本地，修改后进行Push；然后pull request发起请求，团队内进行审核，成功后进行merge，然后团队内的用户就能进行pull
9.本地库初始化

ll  查看当前子目录结构
ls -lA 查看还包括隐藏目录的结构
ll .git/
pwd 查看当前目录结构
.git目录不允许修改和删除
cat .git/config 保存config相关信息

git add 
设置签名：{用户名：‘’，email地址：‘’}用于区分不同开发人员的身份
git config user.name jinlin  设置仓库级别   本地的仓库有效
git config --global 设置系统用户级别

10.git相关命令
git status 工作区缓存的暂存状态
git add .
git add <files>  最开始是添加，后面是修改且可以通过git commit -a
git rm --cached <files> 返回未追踪之前的状态

git commit <files>
:set nu 开启行号  然后按  i  键进行输入信息  接着按esc推出  然后  :wq 返回控制页面完成commit

上面两行等于 git commit -m "输入内容" <files>

11.查看日志
git log 多行显示
空格向下翻页
b向上翻页
q退出
git log --pretty=oneline
git log --onleine
git reflog     HEAD@{移动到当前需要多少步}

12.基于索引值；使用^符号；
基于索引值：git reset --hard  [索引值]  无所谓前进和后退
git reset --hard HEAD 前进到最初
^符号：git reset HEAD ^^^^
~符号： git reset --hard HEAD~2
^和~都只能向后退

--soft  仅在本地库移动HEAD指针
--mixed 在本地库移动HEAD指针  重置暂存区
--hard  在本地库移动HEAD指针 重置暂存区和工作区（本地）

13.删除的文件只是删除了一个版本，我们可以通过上面的git reset --hard 索引值去返回没有被删除那个版本即可
这个删除如果是手动delete则没有记录，通过rm <files>则可以通过git reflog进行查看记录；但是二者都可以通过上述方案进行回退版本

14.文件比较
git diff <files> 修改的内容会被高亮
git diff HEAD^ <files>
不指定文件名的时候会返回全部被修的高亮部分

15分支，在版本控制中，使用多条线同时进行多个任务
1.同时并行多个功能开发，提高开发效率
2.多个分支开发过程，一个分支开发失败不影响其他分支
git branch [分支名]  创建分支
git branch -v   查看分支
git checkout [分支名] 切换分支，切换分支后做的内容修改都是基于新的分支，当切换会主分支的时候，这些新分支的内容将消失

合并分支需要切换到主分支上
git checkout master（主分支）
git merge [分支名]

16.解决冲突
冲突后不会产生新的文件，但是会产生特殊的标志内容

编辑文件删除特殊符号，保存退出
git add <files>
git commit -m "日志信息"


17.git原理
hash算法将明文改为密文；
不管输入的数据量多大，使用同一个哈希算法，得到的结果长度一致，如md5的32位16进制；
算法确定，输入数据确定，输出数据保证不变；
输入数据变化，输出数据变化；
不可逆。
用途：校验服务端和下载后二者问价的hash值比对
git内部是SHA1

18.版本保存机制
1.git是一种小型的文件系统的一组快照，每次提交更新时igit都会对当前你的文件进行快照并保存快照的索引（指针），如果文件不修改则不重新存储只保留一个链接指向之前存储的文件
2.git提交对象，每个文件保存会有一个hash，每次修改hash发生改变，这些hash放到一个tree数组中，同时也有一个hash，用于commit

19.git管理分支
root commit   =>  commit (HEAD指针) =>  merge
                  hot_fix(HEAD)  => commit  =>  commit

20.git remote -v 查看远程仓库别名
注册git
新建仓库，复制仓库地址
git add .
git commit -m "xxx"
git status 
git remote -v 
git remote add origin 仓库名
git push origin [分支名/master]
输入用户名和密码，等待片刻即可完成上传

21.克隆git clone [仓库地址]
完整下载远程仓库；创建origin别名；初始化本地库
邀请加入团队 => 仓库  => setting => Manage access  => invite a collaborator => 复制链接发送 => 对方同意并加入

git pull = git fetch + merge




















